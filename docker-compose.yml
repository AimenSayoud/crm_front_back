version: '3.8'

services:
  postgres:
    build:
      context: ./postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=recruitment_plus
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recruitment_plus"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./rec_back:/app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:123@postgres:5432/recruitment_plus
      - SECRET_KEY=your_secret_key_here
      - ENVIRONMENT=development
      - DEBUG=True
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8000:8000"
    networks:
      - app-network
    restart: unless-stopped
    # Use uvicorn development server for local development
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./rec_front:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api/v1
      - NEXT_PUBLIC_USE_MOCK_DATA=false
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    # Use development server for local development
    command: ["npm", "run", "dev"]

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: